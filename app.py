from flask import Flask, request
from datetime import datetime
import time

app = Flask(__name__)
server_start = datetime.now().strftime('%H:%M:%S %d/%m/%Y')
messages = [
    {'username': 'Information', 'text': '''–≠—Ç–æ —Ö–∞–± –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π  —Ç—É—Ç –º–æ–∂–Ω–æ –æ–±—â–∞—Ç—å—Å—è –∏ –∏—Å–∫–∞—Ç—å –∫–∞–Ω–∞–ª—ã. 
    –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –∫–∞–Ω–∞–ª –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –≤ –ø–æ–ª–µ chanel –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –∏ –Ω–∞–∂–∞—Ç—å –Ω–∞ change.
    –í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤–ø–∏—Å–∞–≤ –≤ –ø–æ–ª–µ chanel –Ω–∞–∑–≤–∞–Ω–∏–µ hub –∏ –Ω–∞–∂–∞—Ç—å –Ω–∞ change.''',
     'timestamp': time.time(),'chanel':'hub'},
]

users = {
    'Information': '1806f63b426354e43b75862eeccdd548b45f33830aed7f388432e6fe2794128a31379627d3f8bdb231cba902e8c28893',
}

@app.route('/')
def hello()->str:
    '''
    Index page function: no param
    -----------------------------
    [RU] –ò–Ω–¥–µ–∫—Å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞.
    [EN] Index web page.
    -----------------------------
    '''
    return 'Hello, User! –≠—Ç–æ –Ω–∞—à –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä. –ï–≥–æ <a href="/status">—Å—Ç–∞—Ç—É—Å</a>'

@app.route('/status')
def status()->str:
    '''
    Status page function: no param
    ------------------------------
    [RU] –î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç
    —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞.
    [EN] This function shows
    server status.
    ------------------------------
    '''
    try:
        status_message= {
            "status": "OK",
            "name": "Minigram",
            "server_start_time": server_start,
            "server_current_time": datetime.now().strftime('%H:%M:%S %d/%m/%Y'),
            "current_time_seconds": time.time(),
            "users_on_server":len(users),
            "messages_on_server":len(messages)
        }
        return status_message
    except Exception as e:
        return {"status":"ERROR","error":e}

@app.route("/send_message")
def send_message()->dict:
    '''
    Sending messages function: no param
    -----------------------------------
    [RU] –î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∑–≤–æ–ª—è–µ—Ç
    –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∑–∞–π—Ç–∏ –ª–∏–±–æ
    –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å
    —Å–æ–æ–±—â–µ–Ω–∏–µ.
    [EN] This function allows
    user to sign up or sign in
    and send some message.
    -----------------------------------
    '''
    try:
        username = request.json['username']
        password = request.json['password']
        text = request.json['text']
        chanel=request.json['chanel']
        if chanel == '':
            chanel = 'hub'

        if username in users:
            if users[username] != password:
                return {"ok": False,"error":"Incorrect password"}
        else:
            users[username] = password
        #–∞–Ω–∞–ª–∏–∑ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
        array_of_words = text.split()
        result_text=''
        for word in array_of_words:
            if word =='!horse':
                result_text+= 'üê¥ '
            elif word == '!smile':
                result_text+= 'üôÇ '
            elif word == '!pistol':
                result_text+= 'üî´ '
            else:
                result_text+=word+' '
        #—ç—Ç–æ –º–æ–∂–Ω–æ –µ—â—ë –∏ —É–≤–µ–ª–∏—á–∏—Ç—å –∏ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ
        ########################
        messages.append({"username": username, "text": result_text, "timestamp": time.time(),"chanel":chanel})
        # text ?
        return {"ok": True, "error": None}
    except Exception as e:
        return {"ok":False,"error":e}






@app.route("/get_messages")
def get_messages()->dict:
    '''
    Getting messages function: no param
    -----------------------------------
    [RU] –î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–¥–∞—ë—Ç
    –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—Å–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ
    —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–∞.
    [EN] This function get to
    user all actually messages from
    server.
    -----------------------------------
    '''
    try:
        after = float(request.args['after'])
        ch =str(request.args['chanel'])
        result = []
        for message in messages:
            if message['timestamp'] > after and message['chanel'] == ch:
                result.append(message)
        return {
            "messages": result,
            "error": None
        }
    except Exception as e:
        return{ "messages":None,"error":e}



app.run(debug=True)